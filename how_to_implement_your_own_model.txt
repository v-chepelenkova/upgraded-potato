    How to create your own event?
1. There is an abstract Event structure in CORE. First of all, inherit your own
AnyEvent structure (StorageEvent in the example) from Event.
[see my_event.h file; storage_event.h in the example]

2. You're trying to add some new MyEvent structure. Add it in the std::variant
in AnyEvent structure.
[see my_event.h file; storage_event.h in the example]

3. Add your MyEvent structure declaration.
[see my_event.h file; storage_event.h in the example]

4. There is an std::visit in AnyEvent's Handle() function. Add there your
lambda function with your event.
[see my_event.cpp file; storage_event.cpp in the example]

5. If MyEvent is generated by some Inhabitant, make sure that you're returning
that event where needed.
[see my_inhabitant.h/.cpp; thief.h/.cpp in the example]

6. Don't forget to notify observers when event is happening. Do it inside Model's
member functions, or do it manually, when event is generated by some inhabitant.
[see my_model.cpp; storage_model.cpp in the example]

